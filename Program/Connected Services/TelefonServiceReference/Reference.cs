//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Service.TelefonServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SmartPhone", Namespace="http://schemas.datacontract.org/2004/07/WCFServices")]
    [System.SerializableAttribute()]
    public partial class SmartPhone : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Service.TelefonServiceReference.Sensor LightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NazivField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Service.TelefonServiceReference.Sensor PedometerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProizvajalecField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Service.TelefonServiceReference.Sensor ProximityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool StanjeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Service.TelefonServiceReference.Sensor Light {
            get {
                return this.LightField;
            }
            set {
                if ((object.ReferenceEquals(this.LightField, value) != true)) {
                    this.LightField = value;
                    this.RaisePropertyChanged("Light");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Naziv {
            get {
                return this.NazivField;
            }
            set {
                if ((object.ReferenceEquals(this.NazivField, value) != true)) {
                    this.NazivField = value;
                    this.RaisePropertyChanged("Naziv");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Service.TelefonServiceReference.Sensor Pedometer {
            get {
                return this.PedometerField;
            }
            set {
                if ((object.ReferenceEquals(this.PedometerField, value) != true)) {
                    this.PedometerField = value;
                    this.RaisePropertyChanged("Pedometer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Proizvajalec {
            get {
                return this.ProizvajalecField;
            }
            set {
                if ((object.ReferenceEquals(this.ProizvajalecField, value) != true)) {
                    this.ProizvajalecField = value;
                    this.RaisePropertyChanged("Proizvajalec");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Service.TelefonServiceReference.Sensor Proximity {
            get {
                return this.ProximityField;
            }
            set {
                if ((object.ReferenceEquals(this.ProximityField, value) != true)) {
                    this.ProximityField = value;
                    this.RaisePropertyChanged("Proximity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Stanje {
            get {
                return this.StanjeField;
            }
            set {
                if ((this.StanjeField.Equals(value) != true)) {
                    this.StanjeField = value;
                    this.RaisePropertyChanged("Stanje");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Sensor", Namespace="http://schemas.datacontract.org/2004/07/WCFServices")]
    [System.SerializableAttribute()]
    public partial class Sensor : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double KmField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NazivField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProizvajalecField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool StanjeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StepsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool TurnOffField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Km {
            get {
                return this.KmField;
            }
            set {
                if ((this.KmField.Equals(value) != true)) {
                    this.KmField = value;
                    this.RaisePropertyChanged("Km");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Light {
            get {
                return this.LightField;
            }
            set {
                if ((this.LightField.Equals(value) != true)) {
                    this.LightField = value;
                    this.RaisePropertyChanged("Light");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Naziv {
            get {
                return this.NazivField;
            }
            set {
                if ((object.ReferenceEquals(this.NazivField, value) != true)) {
                    this.NazivField = value;
                    this.RaisePropertyChanged("Naziv");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Proizvajalec {
            get {
                return this.ProizvajalecField;
            }
            set {
                if ((object.ReferenceEquals(this.ProizvajalecField, value) != true)) {
                    this.ProizvajalecField = value;
                    this.RaisePropertyChanged("Proizvajalec");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Stanje {
            get {
                return this.StanjeField;
            }
            set {
                if ((this.StanjeField.Equals(value) != true)) {
                    this.StanjeField = value;
                    this.RaisePropertyChanged("Stanje");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Steps {
            get {
                return this.StepsField;
            }
            set {
                if ((this.StepsField.Equals(value) != true)) {
                    this.StepsField = value;
                    this.RaisePropertyChanged("Steps");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool TurnOff {
            get {
                return this.TurnOffField;
            }
            set {
                if ((this.TurnOffField.Equals(value) != true)) {
                    this.TurnOffField = value;
                    this.RaisePropertyChanged("TurnOff");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="TelefonServiceReference.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetData", ReplyAction="http://tempuri.org/IService1/GetDataResponse")]
        Service.TelefonServiceReference.SmartPhone GetData();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetData", ReplyAction="http://tempuri.org/IService1/GetDataResponse")]
        System.Threading.Tasks.Task<Service.TelefonServiceReference.SmartPhone> GetDataAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetState", ReplyAction="http://tempuri.org/IService1/GetStateResponse")]
        Service.TelefonServiceReference.SmartPhone GetState();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetState", ReplyAction="http://tempuri.org/IService1/GetStateResponse")]
        System.Threading.Tasks.Task<Service.TelefonServiceReference.SmartPhone> GetStateAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SetState", ReplyAction="http://tempuri.org/IService1/SetStateResponse")]
        Service.TelefonServiceReference.SmartPhone SetState(bool state);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SetState", ReplyAction="http://tempuri.org/IService1/SetStateResponse")]
        System.Threading.Tasks.Task<Service.TelefonServiceReference.SmartPhone> SetStateAsync(bool state);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/RaiseSteps", ReplyAction="http://tempuri.org/IService1/RaiseStepsResponse")]
        Service.TelefonServiceReference.SmartPhone RaiseSteps();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/RaiseSteps", ReplyAction="http://tempuri.org/IService1/RaiseStepsResponse")]
        System.Threading.Tasks.Task<Service.TelefonServiceReference.SmartPhone> RaiseStepsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/RestartSteps", ReplyAction="http://tempuri.org/IService1/RestartStepsResponse")]
        Service.TelefonServiceReference.SmartPhone RestartSteps();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/RestartSteps", ReplyAction="http://tempuri.org/IService1/RestartStepsResponse")]
        System.Threading.Tasks.Task<Service.TelefonServiceReference.SmartPhone> RestartStepsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/TurnOffScreen", ReplyAction="http://tempuri.org/IService1/TurnOffScreenResponse")]
        Service.TelefonServiceReference.SmartPhone TurnOffScreen();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/TurnOffScreen", ReplyAction="http://tempuri.org/IService1/TurnOffScreenResponse")]
        System.Threading.Tasks.Task<Service.TelefonServiceReference.SmartPhone> TurnOffScreenAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AdjustBrightness", ReplyAction="http://tempuri.org/IService1/AdjustBrightnessResponse")]
        Service.TelefonServiceReference.SmartPhone AdjustBrightness();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AdjustBrightness", ReplyAction="http://tempuri.org/IService1/AdjustBrightnessResponse")]
        System.Threading.Tasks.Task<Service.TelefonServiceReference.SmartPhone> AdjustBrightnessAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDataSensorPedometer", ReplyAction="http://tempuri.org/IService1/GetDataSensorPedometerResponse")]
        Service.TelefonServiceReference.Sensor GetDataSensorPedometer();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDataSensorPedometer", ReplyAction="http://tempuri.org/IService1/GetDataSensorPedometerResponse")]
        System.Threading.Tasks.Task<Service.TelefonServiceReference.Sensor> GetDataSensorPedometerAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDataSensorProximity", ReplyAction="http://tempuri.org/IService1/GetDataSensorProximityResponse")]
        Service.TelefonServiceReference.Sensor GetDataSensorProximity();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDataSensorProximity", ReplyAction="http://tempuri.org/IService1/GetDataSensorProximityResponse")]
        System.Threading.Tasks.Task<Service.TelefonServiceReference.Sensor> GetDataSensorProximityAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDataSensorLight", ReplyAction="http://tempuri.org/IService1/GetDataSensorLightResponse")]
        Service.TelefonServiceReference.Sensor GetDataSensorLight();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDataSensorLight", ReplyAction="http://tempuri.org/IService1/GetDataSensorLightResponse")]
        System.Threading.Tasks.Task<Service.TelefonServiceReference.Sensor> GetDataSensorLightAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : Service.TelefonServiceReference.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<Service.TelefonServiceReference.IService1>, Service.TelefonServiceReference.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Service.TelefonServiceReference.SmartPhone GetData() {
            return base.Channel.GetData();
        }
        
        public System.Threading.Tasks.Task<Service.TelefonServiceReference.SmartPhone> GetDataAsync() {
            return base.Channel.GetDataAsync();
        }
        
        public Service.TelefonServiceReference.SmartPhone GetState() {
            return base.Channel.GetState();
        }
        
        public System.Threading.Tasks.Task<Service.TelefonServiceReference.SmartPhone> GetStateAsync() {
            return base.Channel.GetStateAsync();
        }
        
        public Service.TelefonServiceReference.SmartPhone SetState(bool state) {
            return base.Channel.SetState(state);
        }
        
        public System.Threading.Tasks.Task<Service.TelefonServiceReference.SmartPhone> SetStateAsync(bool state) {
            return base.Channel.SetStateAsync(state);
        }
        
        public Service.TelefonServiceReference.SmartPhone RaiseSteps() {
            return base.Channel.RaiseSteps();
        }
        
        public System.Threading.Tasks.Task<Service.TelefonServiceReference.SmartPhone> RaiseStepsAsync() {
            return base.Channel.RaiseStepsAsync();
        }
        
        public Service.TelefonServiceReference.SmartPhone RestartSteps() {
            return base.Channel.RestartSteps();
        }
        
        public System.Threading.Tasks.Task<Service.TelefonServiceReference.SmartPhone> RestartStepsAsync() {
            return base.Channel.RestartStepsAsync();
        }
        
        public Service.TelefonServiceReference.SmartPhone TurnOffScreen() {
            return base.Channel.TurnOffScreen();
        }
        
        public System.Threading.Tasks.Task<Service.TelefonServiceReference.SmartPhone> TurnOffScreenAsync() {
            return base.Channel.TurnOffScreenAsync();
        }
        
        public Service.TelefonServiceReference.SmartPhone AdjustBrightness() {
            return base.Channel.AdjustBrightness();
        }
        
        public System.Threading.Tasks.Task<Service.TelefonServiceReference.SmartPhone> AdjustBrightnessAsync() {
            return base.Channel.AdjustBrightnessAsync();
        }
        
        public Service.TelefonServiceReference.Sensor GetDataSensorPedometer() {
            return base.Channel.GetDataSensorPedometer();
        }
        
        public System.Threading.Tasks.Task<Service.TelefonServiceReference.Sensor> GetDataSensorPedometerAsync() {
            return base.Channel.GetDataSensorPedometerAsync();
        }
        
        public Service.TelefonServiceReference.Sensor GetDataSensorProximity() {
            return base.Channel.GetDataSensorProximity();
        }
        
        public System.Threading.Tasks.Task<Service.TelefonServiceReference.Sensor> GetDataSensorProximityAsync() {
            return base.Channel.GetDataSensorProximityAsync();
        }
        
        public Service.TelefonServiceReference.Sensor GetDataSensorLight() {
            return base.Channel.GetDataSensorLight();
        }
        
        public System.Threading.Tasks.Task<Service.TelefonServiceReference.Sensor> GetDataSensorLightAsync() {
            return base.Channel.GetDataSensorLightAsync();
        }
    }
}
